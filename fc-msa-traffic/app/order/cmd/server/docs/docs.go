// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cancel": {
            "post": {
                "description": "Cancel an existing order and reverse its stock and pricing effects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Cancel an order",
                "parameters": [
                    {
                        "description": "Order cancellation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order.CancelOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully canceled order",
                        "schema": {
                            "$ref": "#/definitions/order.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/flash": {
            "post": {
                "description": "Create a new order with calculated pricing, markup, and discount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created order",
                        "schema": {
                            "$ref": "#/definitions/order.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "description": "Retrieve detailed order information including items and final amount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "schema": {
                            "$ref": "#/definitions/order.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "order.CancelOrderRequest": {
            "type": "object",
            "required": [
                "order_id"
            ],
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "order.CreateOrderRequest": {
            "type": "object",
            "properties": {
                "order_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order.OrderItemRequest"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "order.Order": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "final_amount": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "order_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order.OrderItem"
                    }
                },
                "status": {
                    "$ref": "#/definitions/order.OrderStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "order.OrderItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discount": {
                    "description": "price reduction given to the buyer",
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "markup": {
                    "description": "the amount added to the cost of a product to determine its selling price",
                    "type": "number"
                },
                "order_id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "product_price": {
                    "description": "base_price/unit",
                    "type": "number"
                },
                "quantity": {
                    "description": "total unit",
                    "type": "integer"
                },
                "total_price": {
                    "description": "(ProductPrice - Discount + MarkUp) * Quantity",
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "order.OrderItemRequest": {
            "type": "object",
            "required": [
                "product_id",
                "quantity"
            ],
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "order.OrderStatus": {
            "type": "string",
            "enum": [
                "PENDING",
                "PROCESSED",
                "SHIPPED",
                "COMPLETED",
                "CANCELLED"
            ],
            "x-enum-varnames": [
                "StatusPending",
                "StatusProcessed",
                "StatusShipped",
                "StatusCompleted",
                "StatusCancelled"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8083",
	BasePath:         "/api/v1/orders",
	Schemes:          []string{},
	Title:            "Order Service API",
	Description:      "This is an order service API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
