basePath: /api/v1/catalogs
definitions:
  catalog.Product:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
      updated_at:
        type: string
    type: object
  catalog.ReleaseStockRequest:
    properties:
      product_id:
        type: string
      quantity:
        minimum: 1
        type: integer
    required:
    - product_id
    - quantity
    type: object
  catalog.ReserveStockRequest:
    properties:
      product_id:
        type: string
      quantity:
        minimum: 1
        type: integer
    required:
    - product_id
    - quantity
    type: object
host: localhost:8082
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: This is an catalog service API.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Catalog Service API
  version: "1.0"
paths:
  /api/v1/catalogs/products:
    get:
      description: Retrieve list of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/catalog.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get all products
      tags:
      - products
  /api/v1/catalogs/products/{id}:
    get:
      description: Retrieve product stock by product ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get product stock by ID
      tags:
      - products
  /api/v1/catalogs/products/release:
    post:
      consumes:
      - application/json
      description: Increase product stock by quantity
      parameters:
      - description: Release Stock Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/catalog.ReleaseStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Release product stock
      tags:
      - stock
  /api/v1/catalogs/products/reverse:
    post:
      consumes:
      - application/json
      description: Decrease product stock by quantity
      parameters:
      - description: Reverse Stock Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/catalog.ReserveStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Reverse product stock
      tags:
      - stock
swagger: "2.0"
