{
    "swagger": "2.0",
    "info": {
        "description": "This is an pricing service API.",
        "title": "Pricing Service API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8084",
    "basePath": "/api/v1/pricings",
    "paths": {
        "/rules": {
            "post": {
                "description": "Set pricing rule including markup, discount, and thresholds for a specific product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pricing"
                ],
                "summary": "Create or update pricing rule for a product",
                "parameters": [
                    {
                        "description": "Pricing Rule Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pricing.PricingRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created pricing rule",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation or binding error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "description": "Retrieve pricing rule and calculate final price based on current stock level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pricing"
                ],
                "summary": "Get calculated pricing for a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calculated pricing result",
                        "schema": {
                            "$ref": "#/definitions/pricing.Pricing"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pricing.Pricing": {
            "type": "object",
            "properties": {
                "discount": {
                    "description": "Discount percentage (e.g., 0.10 for 10%)",
                    "type": "number"
                },
                "final_price": {
                    "description": "Final price = (base_price * (1 + markup)) - discount",
                    "type": "number"
                },
                "markup": {
                    "description": "Markup percentage (e.g., 0.15 for 15%)",
                    "type": "number"
                },
                "product_id": {
                    "description": "ID of the product",
                    "type": "string"
                }
            }
        },
        "pricing.PricingRuleRequest": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "default_discount": {
                    "type": "number",
                    "maximum": 1,
                    "minimum": 0
                },
                "default_markup": {
                    "type": "number",
                    "maximum": 1,
                    "minimum": 0
                },
                "discount_reduction": {
                    "type": "number",
                    "maximum": 1,
                    "minimum": 0
                },
                "markup_increase": {
                    "type": "number",
                    "maximum": 1,
                    "minimum": 0
                },
                "product_id": {
                    "type": "string"
                },
                "stock_threshold": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        }
    }
}