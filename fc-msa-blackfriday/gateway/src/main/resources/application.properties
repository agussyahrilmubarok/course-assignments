# Server
server.port=${SERVER_PORT:8080}
server.shutdown=graceful

# Spring Application
spring.application.name=gateway

# Redis
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}

# Eureka Client
spring.cloud.discovery.enabled=true
spring.cloud.loadbalancer.enabled=true
eureka.client.service-url.defaultZone=http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/
eureka.instance.prefer-ip-address=true

# Gateway Discovery Locator (updated prefix)
spring.cloud.gateway.server.webflux.discovery.locator.enabled=true

# Global Filters (updated prefix)
spring.cloud.gateway.server.webflux.default-filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.default-filters[0].args.redis-rate-limiter.replenishRate=10
spring.cloud.gateway.server.webflux.default-filters[0].args.redis-rate-limiter.burstCapacity=20
spring.cloud.gateway.server.webflux.default-filters[0].args.redis-rate-limiter.requestedTokens=1
spring.cloud.gateway.server.webflux.default-filters[0].args.key-resolver=#{@memberKeyResolver}

# Routes (updated prefix)
## Member Service Public Routes
spring.cloud.gateway.server.webflux.routes[0].id=member-service
spring.cloud.gateway.server.webflux.routes[0].uri=lb://MEMBER-SERVICE
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/v1/members,/api/v1/members/**

## Catalog Service Public Routes
spring.cloud.gateway.server.webflux.routes[1].id=catalog-service
spring.cloud.gateway.server.webflux.routes[1].uri=lb://CATALOG-SERVICE
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/api/v1/catalogs,/api/v1/catalogs/**

## Search Service Public Routes
spring.cloud.gateway.server.webflux.routes[2].id=search-service
spring.cloud.gateway.server.webflux.routes[2].uri=lb://SEARCH-SERVICE
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/api/v1/search,/api/v1/search/**

## Order Service Public Routes
spring.cloud.gateway.server.webflux.routes[3].id=order-service
spring.cloud.gateway.server.webflux.routes[3].uri=lb://ORDER-SERVICE
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/api/v1/orders,/api/v1/orders/**

## Payment Service Public Routes
spring.cloud.gateway.server.webflux.routes[4].id=payment-service
spring.cloud.gateway.server.webflux.routes[4].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.server.webflux.routes[4].predicates[0]=Path=/api/v1/payments,/api/v1/payments/**

# Resilience4j Circuit Breaker
resilience4j.circuitbreaker.instances.authCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.authCircuitBreaker.slidingWindowSize=5
resilience4j.circuitbreaker.instances.authCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.authCircuitBreaker.permittedNumberOfCallsInHalfOpenState=10
resilience4j.circuitbreaker.instances.authCircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.authCircuitBreaker.waitDurationInOpenState=5000
resilience4j.circuitbreaker.instances.authCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.authCircuitBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.authCircuitBreaker.record-exceptions[0]=java.util.concurrent.TimeoutException
resilience4j.circuitbreaker.instances.authCircuitBreaker.record-exceptions[1]=org.springframework.cloud.gateway.support.NotFoundException
resilience4j.circuitbreaker.instances.authCircuitBreaker.record-exceptions[2]=io.github.resilience4j.circuitbreaker.CallNotPermittedException

# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Logging
logging.level.org.springframework.cloud.gateway=INFO
logging.level.org.springframework.cloud.netflix.eureka=INFO
