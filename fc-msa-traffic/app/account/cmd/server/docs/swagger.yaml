basePath: /api/v1/accounts
definitions:
  account.AccountResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/account.UserResponse'
    type: object
  account.SignInRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  account.SignUpRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  account.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  account.ValidateRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
host: localhost:8081
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: This is an account service API.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Account Service API
  version: "1.0"
paths:
  /me:
    get:
      consumes:
      - application/json
      description: Retrieve info about the authenticated user from JWT token
      produces:
      - application/json
      responses:
        "200":
          description: Current user info
          schema:
            $ref: '#/definitions/account.UserResponse'
        "400":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get current authenticated user info
      tags:
      - User
  /sign-in:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Sign in payload
        in: body
        name: SignInRequest
        required: true
        schema:
          $ref: '#/definitions/account.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token and user data
          schema:
            $ref: '#/definitions/account.AccountResponse'
        "400":
          description: Validation or authentication error
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - Authentication
  /sign-up:
    post:
      consumes:
      - application/json
      description: Register a new account with email and password
      parameters:
      - description: Sign up payload
        in: body
        name: SignUpRequest
        required: true
        schema:
          $ref: '#/definitions/account.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Registered user data
          schema:
            $ref: '#/definitions/account.UserResponse'
        "400":
          description: Validation or bad request error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - Authentication
  /validate:
    post:
      consumes:
      - application/json
      description: Validate a JWT token and return user info if valid
      parameters:
      - description: Token to validate
        in: body
        name: ValidateRequest
        required: true
        schema:
          $ref: '#/definitions/account.ValidateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Validated user info and token
          schema:
            $ref: '#/definitions/account.AccountResponse'
        "400":
          description: Invalid token or validation failed
          schema:
            additionalProperties: true
            type: object
      summary: Validate JWT token
      tags:
      - Authentication
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
