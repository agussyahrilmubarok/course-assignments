server:
  shutdown: graceful

spring:
  application:
    name: ${SERVER_NAME:POINT-SERVICE-BATCH}
  batch:
    job:
      enabled: true # Enables automatic execution of a Spring Batch Job at application startup.
      # When a jobName is provided via command line arguments (jobName=...),
      # Spring Boot will find the matching Job bean and launch it with the given parameters.
      # Disables automatic job execution at startup.
      # Jobs will not run even if jobName and parameters are passed via CLI.
      # Use this when you want to launch jobs manually (e.g., from code, scheduler, or external trigger).
    jdbc:
      initialize-schema: never
    thread:
      pool:
        core-size: 4        # The number of core threads to keep in the thread pool, even if they are idle.
        max-size: 10        # The maximum number of threads allowed in the thread pool.
        queue-capacity: 100 # The capacity of the queue to hold tasks before new threads are created.
        # If the queue is full and all threads are busy, new tasks may be rejected.
  datasource:
    url: jdbc:h2:mem:batchdb;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: sa
    password:
  sql:
    init:
      mode: always
      schema-locations: classpath:schema-h2.sql
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        show_sql: true
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}

logging:
  level:
    org.springframework.batch: DEBUG
    com.example.point.batch: DEBUG