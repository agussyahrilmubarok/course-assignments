package model

type MidtransRequest struct {
	TransactionDetails struct {
		OrderID  string `json:"order_id"`
		GrossAmt int64  `json:"gross_amt"`
	} `json:"transaction_details"`
	CustomerDetail struct {
		FName string `json:"f_name"`
		Email string `json:"email"`
	} `json:"customer_detail"`
}

type MidtransCreateTxResult struct {
}

type MidtransTxParam struct {
}

type MidtransTxResult struct {
	OrderID string `json:"order_id"`
	Amount  int64  `json:"amount"`
	Status  string `json:"status"`
}

const (
	MidtransTransactionStatusCapture       = "capture"        // ‚úÖ Payment successful, card captured
	MidtransTransactionStatusSettlement    = "settlement"     // ‚úÖ Payment settled, funds credited
	MidtransTransactionStatusPending       = "pending"        // üïí Waiting for customer to pay
	MidtransTransactionStatusDeny          = "deny"           // ‚ùå Payment rejected (FDS or issuer)
	MidtransTransactionStatusCancel        = "cancel"         // ‚ùå Cancelled by merchant or system
	MidtransTransactionStatusExpire        = "expire"         // ‚ùå Payment expired (not paid in time)
	MidtransTransactionStatusFailure       = "failure"        // ‚ùå Unexpected error during processing
	MidtransTransactionStatusRefund        = "refund"         // ‚Ü©Ô∏è Full refund issued
	MidtransTransactionStatusPartialRefund = "partial_refund" // ‚Ü©Ô∏è Partial refund issued
	MidtransTransactionStatusAuthorize     = "authorize"      // üïí Authorized, waiting for capture
)

const (
	MidtransFraudStatusAccept = "accept" // ‚úÖ Transaction is safe, not considered fraud
	MidtransFraudStatusDeny   = "deny"   // ‚ùå Transaction is fraudulent, rejected by FDS
)

// MidtransCallback represents the payment notification payload sent by Midtrans.
type MidtransCallback struct {
	TransactionTime   string `json:"transaction_time"`   // The time when the transaction occurred (format: "2006-01-02 15:04:05")
	TransactionStatus string `json:"transaction_status"` // The current status of the transaction (e.g., settlement, pending, cancel)
	TransactionID     string `json:"transaction_id"`     // Unique transaction ID generated by Midtrans
	StatusMessage     string `json:"status_message"`     // Status message provided by Midtrans
	StatusCode        string `json:"status_code"`        // HTTP-like status code from Midtrans (usually "200" for success)
	SignatureKey      string `json:"signature_key"`      // Encrypted signature for security verification
	SettlementTime    string `json:"settlement_time"`    // The time the transaction was settled (if completed)
	PaymentType       string `json:"payment_type"`       // The type of payment method used (e.g., gopay, bank_transfer)
	OrderID           string `json:"order_id"`           // The order ID originally sent when initiating the transaction
	MerchantID        string `json:"merchant_id"`        // Midtrans-assigned merchant identifier
	GrossAmount       string `json:"gross_amount"`       // Total amount of the transaction, in string format (e.g., "105000.00")
	FraudStatus       string `json:"fraud_status"`       // Fraud check status (e.g., accept, deny, challenge)
	Currency          string `json:"currency"`           // Currency used for the transaction (typically "IDR")

	ExtraFields map[string]interface{} `json:"-"` // Catch-all for unknown fields
}

func (m *MidtransCallback) IsKnownMidtransField(key string) bool {
	switch key {
	case "transaction_time", "transaction_status", "transaction_id",
		"status_message", "status_code", "signature_key",
		"settlement_time", "payment_type", "order_id",
		"merchant_id", "gross_amount", "fraud_status", "currency":
		return true
	default:
		return false
	}
}

// Notes:
// {
//   "transaction_time": "2021-06-15 18:45:13",
//   "transaction_status": "settlement",
//   "transaction_id": "513f1f01-c9da-474c-9fc9-d5c64364b709",
//   "status_message": "midtrans payment notification",
//   "status_code": "200",
//   "signature_key": "ea49a87fb3af81cadbdd60091452dc2eb8fcbaa9e7dd4f1f4159d79737ca2430eaa976bae52190175688b20d63ce47d6659defc44ad5f15415b7ad40b8a86545",
//   "settlement_time": "2021-06-15 18:45:28",
//   "payment_type": "gopay",
//   "order_id": "5ae0316f-c3ce-4ca1-8f67-aac0884f3882",
//   "merchant_id": "G141532850",
//   "gross_amount": "100.00",
//   "fraud_status": "accept",
//   "currency": "IDR"
// }
